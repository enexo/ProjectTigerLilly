{"version":3,"sources":["img/ChessNetwork.png","img/Christof-Sielecki.png","img/Eric-Rosen.png","img/John-Bartholomew.png","img/Alexandra-Botez.png","img/Agadmator.png","components/Home.js","components/About.js","components/Header.js","api.js","components/Streams.js","components/StreamerList.js","components/EricRosen.js","components/ChessNetwork.js","components/ChristofSielecki.js","components/JohnBartholomew.js","components/AlexandraBotez.js","components/AntonioRadic.js","App.js","index.js"],"names":["module","exports","console","log","Home","className","href","src","agadmatorPic","alt","botezPic","chessNetworkPic","christofSieleckiPic","ericRosenPic","johnBartholomewPic","About","NavItem","props","pageURI","window","location","pathname","search","liClassName","path","aClassName","disabled","name","NavDropdown","state","isToggleOn","e","preventDefault","this","setState","prevState","classDropdownMenu","id","role","data-toggle","aria-haspopup","aria-expanded","onClick","showDropdown","aria-labelledby","children","React","Component","Navigation","require","config","api","axios","create","timeout","headers","LiveStreams","useState","isLive","setIsLive","cnLive","setCNLive","csLive","setCSLive","jbLive","setJBLive","useEffect","a","get","channel","channelResult","data","is_live","cn","cnResult","cs","csResult","jb","jbResult","fetchData","scope","StreamerList","EricRosen","profileImage","setProfileImage","setDisplayName","userDesc","setUserDesc","user","dataArray","displayName","display_name","offline_image_url","description","ChessNetwork","ChristofSielecki","JohnBartholomew","AlexandraBotez","AntonioRadic","App","Header","exact","component","Stream","ChessExplained","Agadmator","ReactDOM","render","StrictMode","document","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.398467aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ChessNetwork.672b4453.png\";","module.exports = __webpack_public_path__ + \"static/media/Christof-Sielecki.6db6e02b.png\";","module.exports = __webpack_public_path__ + \"static/media/Eric-Rosen.23abe5cf.png\";","module.exports = __webpack_public_path__ + \"static/media/John-Bartholomew.64d48b24.png\";","module.exports = __webpack_public_path__ + \"static/media/Alexandra-Botez.5ed18b95.png\";","module.exports = __webpack_public_path__ + \"static/media/Agadmator.7255ba8e.png\";","import React from 'react';\n\n//Import all Profile Pictures\nimport chessNetworkPic from '../img/ChessNetwork.png';\nimport christofSieleckiPic from '../img/Christof-Sielecki.png';\nimport ericRosenPic from '../img/Eric-Rosen.png';\nimport johnBartholomewPic from '../img/John-Bartholomew.png';\nimport botezPic from '../img/Alexandra-Botez.png';\nimport agadmatorPic from '../img/Agadmator.png';\n\nconsole.log(\"Hi Programmers! My Name is Nathan Orlowski and this is my ReactJS passion project.  If you are interested \" +\n    \"in seeing my CV, please go to NathanOrlowski.com\")\n\nfunction Home() {\n    return (\n        <div>\n            <div className=\"container\">\n                <h1 className=\"greetings\">Meet the Best Live Chess Streamers</h1>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <a href=\"/agadmator\">\n                            <img src={agadmatorPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/agadmator\" className=\"streamerName\">Agadmator</a>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <a href=\"/alexandra-botez\">\n                            <img src={botezPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/alexandra-botez\" className=\"streamerName\">Alexandra Botez</a>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <a href=\"/chessnetwork\">\n                            <img src={chessNetworkPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/chessnetwork\" className=\"streamerName\">ChessNetwork</a>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <a href=\"/christof-sielecki\">\n                            <img src={christofSieleckiPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/christof-sielecki\" className=\"streamerName\">Christof Sielecki</a>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <a href=\"/eric-rosen\">\n                            <img src={ericRosenPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/eric-rosen\" className=\"streamerName\">Eric Rosen</a>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <a href=\"/john-bartholomew\">\n                            <img src={johnBartholomewPic} alt=\"logo\" className=\"img-fluid\"/>\n                        </a>\n                        <div className=\"d-flex justify-content-center\">\n                            <a href=\"/john-bartholomew\" className=\"streamerName\">John Bartholomew</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Home;","import React from 'react';\nimport '../App.css';\n\nfunction About() {\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <p className=\"aboutTheProject\">ChessEnvoy is a passion project built by Nathan Orlowski.  It uses ReactJS and Bootstrap to\n                        connect to the Twitch.TV API.  The GitHub Repo for this project can be viewed\n                            <a href=\"https://github.com/enexo/ProjectTigerLilly\"> here</a>.  Any\n                        questions or concerns, please contact nathan@nathanorlowski.com</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\n\nconst NavItem = props => {\n    const pageURI = window.location.pathname+window.location.search\n    const liClassName = (props.path === pageURI) ? \"nav-item active\" : \"nav-item\";\n    const aClassName = props.disabled ? \"nav-link disabled\" : \"nav-link\";\n    return (\n        <li className={liClassName}>\n            <a href={props.path} className={aClassName}>\n                {props.name}\n                {(props.path === pageURI) ? (<span className=\"sr-only\">(current)</span>) : ''}\n            </a>\n        </li>\n    );\n};\n\nclass NavDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isToggleOn: false\n        };\n    }\n    showDropdown(e) {\n        e.preventDefault();\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn\n        }));\n    }\n    render() {\n        const classDropdownMenu = 'dropdown-menu' + (this.state.isToggleOn ? ' show' : '');\n        return (\n            <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                   aria-haspopup=\"true\" aria-expanded=\"false\"\n                   onClick={(e) => {this.showDropdown(e)}}>\n                    {this.props.name}\n                </a>\n                <div className={classDropdownMenu} aria-labelledby=\"navbarDropdown\">\n                    {this.props.children}\n                </div>\n            </li>\n        )\n    }\n}\n\n\nclass Navigation extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light cheeriness\">\n                <a className=\"navbar-brand\" href=\"/\">ChessEnvoy</a>\n\n                    <ul className=\"navbar-nav mr-auto\">\n\n                        <NavItem path=\"/\" name=\"Home\" />\n                        <NavItem path=\"/live-streams\" name=\"Streaming Now\" />\n\n                        <NavDropdown name=\"Streamers\">\n                            <a className=\"dropdown-item\" href=\"/eric-rosen\">Eric Rosen</a>\n                            <a className=\"dropdown-item\" href=\"/chessnetwork\">ChessNetwork</a>\n                            <a className=\"dropdown-item\" href=\"/christof-sielecki\">Christof Sielecki</a>\n                            <a className=\"dropdown-item\" href=\"/john-bartholomew\">John Bartholomew</a>\n                            <a className=\"dropdown-item\" href=\"/alexandra-botez\">Alexandra Botez</a>\n                            <a className=\"dropdown-item\" href=\"/agadmator\">Agadmator</a>\n                        </NavDropdown>\n\n                        <NavItem path=\"/about\" name=\"About\" />\n                    </ul>\n\n            </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navigation;\n\n\n\n","import axios from 'axios';\nrequire('dotenv').config();\n\nlet api = axios.create({\n    timeout: 10000,\n    headers: ({\n        'Authorization': 'Bearer stq42hqsjt3d8mjjb41ofc1u6d5pz2',\n        'Client-ID': '4ew949l43cq6rcxzz650khijjy0h6y'\n    })\n});\n\nexport default api;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\n\n\nfunction LiveStreams() {\n\n    const [isLive, setIsLive] = useState('unknown');\n    const [cnLive, setCNLive] = useState('unknown');\n    const [csLive, setCSLive] = useState('unknown');\n    const [jbLive, setJBLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Eric Rosen\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=imrosen');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n            }\n\n            // ChessNetwork\n            const cn = await api.get('https://api.twitch.tv/helix/search/channels?query=chessnetwork');\n            let cnResult = cn.data.data[0].is_live;\n            const cnLive = \"Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (cnResult) {\n                setCNLive(cnLive);\n            }\n\n            // Christof-Sielecki\n            const cs = await api.get('https://api.twitch.tv/helix/search/channels?query=chessxplained');\n            let csResult = cs.data.data[0].is_live;\n            const csLive = \"Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (csResult) {\n                setCSLive(csLive);\n            }\n\n            // John Bartholomew\n            const jb = await api.get('https://api.twitch.tv/helix/search/channels?query=JohnBartholomew');\n            let jbResult = jb.data.data[0].is_live;\n            const jbLive = \"Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (jbResult) {\n                setJBLive(jbLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th scope=\"col\">Title</th>\n                                <th scope=\"col\">First Name</th>\n                                <th scope=\"col\">Last Name</th>\n                                <th scope=\"col\">Twitch Channel</th>\n                                <th scope=\"col\">Streaming Now</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <th scope=\"row\">NM</th>\n                                <td>Jerry</td>\n                                <td>ChessNetwork</td>\n                                <td>ChessNetwork</td>\n                                <td>{cnLive}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">IM</th>\n                                <td>Eric</td>\n                                <td>Rosen</td>\n                                <td>IMRosen</td>\n                                <td>{isLive}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">IM</th>\n                                <td>Christof</td>\n                                <td>Sielecki</td>\n                                <td>ChessXplained</td>\n                                <td>{csLive}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">IM</th>\n                                <td>John</td>\n                                <td>Bartholomew</td>\n                                <td>JohnBartholomew</td>\n                                <td>{jbLive}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LiveStreams;","import React, {Fragment} from 'react';\nimport '../App.css';\n\nfunction StreamerList() {\n\n    return (\n        <Fragment>\n            <h2>Streamer Directory</h2>\n            <ul className=\"streamerDir\">\n                <li><a href=\"/john-bartholomew\" className=\"streamerName\">John Bartholomew</a></li>\n                <li><a href=\"/chessnetwork\" className=\"streamerName\">ChessNetwork</a></li>\n                <li><a href=\"/christof-sielecki\" className=\"streamerName\">Christof-Sielecki</a></li>\n                <li><a href=\"/eric-rosen\" className=\"streamerName\">Eric Rosen</a></li>\n                <li><a href=\"/alexandra-botez\" className=\"streamerName\">Alexandra Botez</a></li>\n                <li><a href=\"/agadmator\" className=\"streamerName\">Agadmator</a></li>\n\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default StreamerList;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\nimport StreamerList from \"./StreamerList\";\n\n\nfunction EricRosen() {\n    const [profileImage, setProfileImage] = useState('unknown');\n    // eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Fetch Biographical Information\n            const user = await api.get('https://api.twitch.tv/helix/users?login=imrosen');\n            let dataArray = user.data.data[0];\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            // Fetch whether or not user is Live on Twitch\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=imrosen');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"Eric Rosen is Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h2 className=\"lifetimeTitle\">International Master</h2>\n                        <h1>Eric Rosen</h1>\n                        <strong>American</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>FIDE: XXXX</strong>\n                            </div>\n                            <div className=\"col\">\n                                <strong>USCF: XXXX</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Follow Him On:</strong>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://www.twitch.tv/imrosen\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://twitter.com/IM_Rosen\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/user/RosenChess\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://imrosen.com/\" className=\"socialLinks\">Personal Site</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EricRosen;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport StreamerList from \"./StreamerList\";\n\nfunction ChessNetwork () {\n    const [profileImage, setProfileImage] = useState('unknown');\n    // eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const user = await api.get('https://api.twitch.tv/helix/users?login=chessnetwork');\n            let dataArray = user.data.data[0];\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=chessnetwork');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"ChessNetwork is Live on Twitch!\";\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h2 className=\"lifetimeTitle\">National Master</h2>\n                        <h1>Jerry ChessNetwork</h1>\n                        <strong>American</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>USCF: 2350</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                Follow Him On:\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.twitch.tv/chessnetwork\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://twitter.com/ChessNetwork\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/user/ChessNetwork\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://www.facebook.com/ChessNetwork/\" className=\"socialLinks\">Facebook</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ChessNetwork;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\nimport StreamerList from \"./StreamerList\";\n\n\nfunction ChristofSielecki() {\n    const [profileImage, setProfileImage] = useState('unknown');\n// eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Fetch Biographical Information\n            const user = await api.get('https://api.twitch.tv/helix/users?login=chessxplained');\n            let dataArray = user.data.data[0];\n            console.log(dataArray);\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            // Fetch whether or not user is Live on Twitch\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=chessexplained');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"Christof Sielecki is Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h2 className=\"lifetimeTitle\">International Master</h2>\n                        <h1>Christof Sielecki</h1>\n                        <strong>German</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>FIDE: 2439</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Follow Him On:</strong>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://www.twitch.tv/chessexplained\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://twitter.com/chessexplained\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/user/chessexplained\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://chessexplained.com/\" className=\"socialLinks\">Personal Site</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChristofSielecki;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\nimport StreamerList from \"./StreamerList\";\n\n\nfunction JohnBartholomew() {\n    const [profileImage, setProfileImage] = useState('unknown');\n    // eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Fetch Biographical Information\n            const user = await api.get('https://api.twitch.tv/helix/users?login=JohnBartholomew');\n            let dataArray = user.data.data[0];\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            // Fetch whether or not user is Live on Twitch\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=JohnBartholomew');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"John Bartholomew is Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h2 className=\"lifetimeTitle\">International Master</h2>\n                        <h1>John Bartholomew</h1>\n                        <strong>American</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>FIDE: 2446</strong>\n                            </div>\n                            <div className=\"col\">\n                                <strong>USCF: 2534</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Follow Him On:</strong>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://www.twitch.tv/fins0905\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://twitter.com/fins0905\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/channel/UC6hOVYvNn79Sl1Fc1vx2mYA\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://en.wikipedia.org/wiki/John_Bartholomew_(chess_player)\" className=\"socialLinks\">Wikipedia</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default JohnBartholomew;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\nimport StreamerList from \"./StreamerList\";\n\n\nfunction AlexandraBotez() {\n    const [profileImage, setProfileImage] = useState('unknown');\n    // eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Fetch Biographical Information\n            const user = await api.get('https://api.twitch.tv/helix/users?login=BotezLive');\n            let dataArray = user.data.data[0];\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            // Fetch whether or not user is Live on Twitch\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=BotezLive');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"Alexandra Botez is Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h2 className=\"lifetimeTitle\">Womens International Master</h2>\n                        <h1>Alexandra Botez</h1>\n                        <strong>Canadian</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>FIDE: 2020</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Follow Her On:</strong>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://www.twitch.tv/BotezLive/\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://twitter.com/alexandravbotez\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/botezlive\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://en.wikipedia.org/wiki/Alexandra_Botez\" className=\"socialLinks\">Wikipedia</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AlexandraBotez;","import React, {\n    useEffect, useState\n} from 'react';\nimport api from '../api';\nimport '../App.css';\nimport StreamerList from \"./StreamerList\";\n\n\nfunction AntonioRadic() {\n    const [profileImage, setProfileImage] = useState('unknown');\n    // eslint-disable-next-line\n    const [displayName, setDisplayName] = useState('unknown');\n    const [userDesc, setUserDesc] = useState('unknown');\n    const [isLive, setIsLive] = useState('unknown');\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            // Fetch Biographical Information\n            const user = await api.get('https://api.twitch.tv/helix/users?login=agadmatorofficial');\n            let dataArray = user.data.data[0];\n\n            let displayName = dataArray.display_name;\n            setDisplayName(displayName);\n            let profileImage = dataArray.offline_image_url;\n            setProfileImage(profileImage);\n            let userDesc = dataArray.description;\n            setUserDesc(userDesc);\n\n            // Fetch whether or not user is Live on Twitch\n            const channel = await api.get('https://api.twitch.tv/helix/search/channels?query=agadmatorofficial');\n            let channelResult = channel.data.data[0].is_live;\n            const isLive = \"Eric Rosen is Live on Twitch!\";\n            // If Live, then post live; needs improvement because it prints \"Unknown\" if statement is False\n            if (channelResult) {\n                setIsLive(isLive);\n                console.log(isLive);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <StreamerList/>\n                    </div>\n                    <div className=\"col\">\n                        <img src={profileImage} alt=\"\" className=\"img-fluid\"/><br/>\n                        <h1>Antonio Radic (Agadmator)</h1>\n                        <strong>Croatian</strong>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong>FIDE: 1949</strong>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Follow Him On:</strong>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col socialLinks\">\n                                <a href=\"https://www.twitch.tv/agadmatorofficial\" className=\"socialLinks\">Twitch</a>\n                            </div>\n                            <div className=\"col socialLinks\">\n                                <a href=\"hhttps://twitter.com/agadmator\" className=\"socialLinks\">Twitter</a>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <a href=\"https://www.youtube.com/agadmator\" className=\"socialLinks\">Youtube</a>\n                            </div>\n                            <div className=\"col\">\n                                <a href=\"https://en.wikipedia.org/wiki/Antonio_Radi%C4%87\" className=\"socialLinks\">Wikipedia</a>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <strong className=\"beBold\">Twitch Bio</strong>\n                                <p className=\"userDesc\">{userDesc}</p>\n                                <p  className=\"userDesc\">Twitch Streaming Status: {isLive}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AntonioRadic;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\n// import ReactDOM from 'react-dom';\nimport Header from './components/Header';\nimport Stream from './components/Streams';\nimport EricRosen from './components/EricRosen';\nimport ChessNetwork from './components/ChessNetwork';\nimport ChessExplained from './components/ChristofSielecki';\nimport JohnBartholomew from './components/JohnBartholomew';\nimport AlexandraBotez from \"./components/AlexandraBotez\";\nimport Agadmator from \"./components/AntonioRadic\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport './App.css';\nrequire('dotenv').config();\n\nfunction App() {\n  return (\n      <Router>\n          <Header/>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/live-streams' component={Stream} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/eric-rosen' component={EricRosen} />\n            <Route exact path='/chessnetwork' component={ChessNetwork} />\n            <Route exact path='/christof-sielecki' component={ChessExplained} />\n            <Route exact path='/john-bartholomew' component={JohnBartholomew} />\n            <Route exact path='/alexandra-botez' component={AlexandraBotez} />\n            <Route exact path='/agadmator' component={Agadmator} />\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}